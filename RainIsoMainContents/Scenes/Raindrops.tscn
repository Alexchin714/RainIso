[gd_scene load_steps=9 format=2]

[ext_resource path="res://RainIsoMainContents/Resources/Raindrop.png" type="Texture" id=1]
[ext_resource path="res://RainIsoMainContents/Scenes/Raindrops.gd" type="Script" id=2]
[ext_resource path="res://RainIsoMainContents/Resources/WhiteLarger.png" type="Texture" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode blend_add; //Comment this if you want another render mode.
uniform vec2 center = vec2(0.5);
uniform float size: hint_range(0.0,5.0) = 1.0; //change size to well, change the size of your gradient
uniform vec2 squishness = vec2(1.0); // how squashed your gradient is

//choose colors in the inspector
uniform vec4 color1 : hint_color;
uniform vec4 color2 : hint_color;
uniform vec4 color3 : hint_color;
uniform vec4 color4 : hint_color;
uniform vec4 color5 : hint_color;
uniform vec4 color6 : hint_color;

//choose how far the colors are from each other in the inspector
uniform float step1 : hint_range(0.0,1.0) = 0.159;
uniform float step2 : hint_range(0.0,1.0) = 0.182;
uniform float step3 : hint_range(0.0,1.0) = 0.233;
uniform float step4 : hint_range(0.0,1.0) = 0.264;
uniform float step5 : hint_range(0.0,1.0) = 0.265;
uniform float step6 : hint_range(0.0,1.0) = 0.266;

void fragment() {
	float dist = distance(center*squishness,UV*squishness);
	vec4 color = mix(color1, color2, smoothstep(step1*size, step2*size, dist));
	color = mix(color, color3, smoothstep(step2*size, step3*size, dist));
	color = mix(color, color4, smoothstep(step3*size, step4*size, dist));
	color = mix(color, color5, smoothstep(step4*size, step5*size, dist));
	color = mix(color, color6, smoothstep(step5*size, step6*size, dist));
	COLOR = color;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/center = Vector2( 0.5, 0.5 )
shader_param/size = 0.0
shader_param/squishness = Vector2( 1, 1 )
shader_param/color1 = Color( 0.0862745, 0.0862745, 0.0862745, 1 )
shader_param/color2 = Color( 0, 0, 0, 1 )
shader_param/color3 = Color( 0, 0, 0, 1 )
shader_param/color4 = Color( 0, 0, 0, 1 )
shader_param/color5 = Color( 0, 0, 0, 1 )
shader_param/color6 = Color( 0, 0, 0, 1 )
shader_param/step1 = 0.009
shader_param/step2 = 0.027
shader_param/step3 = 0.233
shader_param/step4 = 0.251
shader_param/step5 = 0.305
shader_param/step6 = 0.354

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 80, 80 )

[sub_resource type="Animation" id=4]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite/Backdrop:material:shader_param/step1")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.009 ]
}

[sub_resource type="Animation" id=5]
resource_name = "idle"
length = 3.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite/Backdrop:material:shader_param/size")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 2.4, 3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 0.953, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite/Backdrop:material:shader_param/step1")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1.9, 3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.199, 0.025, 0.199 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite/Backdrop:material:shader_param/step2")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.8, 3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.027, 0.181, 0.027 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite/Backdrop:material:shader_param/color4")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 1.5, 3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 0.454902, 0.784314, 1, 1 ), Color( 0, 0, 0, 1 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Sprite/Backdrop:material:shader_param/color3")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 2, 3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 0.211765, 0.541176, 0.670588, 1 ), Color( 0, 0, 0, 1 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Sprite/Backdrop:material:shader_param/color2")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 1.1, 3 ),
"transitions": PoolRealArray( 1, 1.03526, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 0, 0.576471, 1, 1 ), Color( 0, 0, 0, 1 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Sprite/Backdrop:material:shader_param/squishness")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 1.5, 3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 0.847, 0.861 ), Vector2( 1, 1 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("Sprite:position")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0, 1.5, 3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, 32 ), Vector2( 0, 0 ) ]
}

[node name="Raindrops" type="Node2D"]
script = ExtResource( 2 )

[node name="Sprite" type="Sprite" parent="."]
scale = Vector2( 4, 4 )
texture = ExtResource( 1 )
__meta__ = {
"_edit_group_": true
}

[node name="Backdrop" type="Sprite" parent="Sprite"]
material = SubResource( 2 )
position = Vector2( 1.90735e-06, 3.8147e-06 )
scale = Vector2( 7, 7 )
z_index = -1
texture = ExtResource( 3 )

[node name="Area2D" type="Area2D" parent="Sprite"]
position = Vector2( 0, -0.533333 )
scale = Vector2( 0.25, 0.25 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Sprite/Area2D"]
shape = SubResource( 3 )
__meta__ = {
"_edit_lock_": true
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "idle"
anims/RESET = SubResource( 4 )
anims/idle = SubResource( 5 )

[connection signal="body_entered" from="Sprite/Area2D" to="." method="_on_Area2D_body_entered"]
