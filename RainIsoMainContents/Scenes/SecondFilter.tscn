[gd_scene load_steps=8 format=2]

[ext_resource path="res://RainIsoMainContents/Scenes/SecondFilter.gd" type="Script" id=1]
[ext_resource path="res://RainIsoMainContents/CustomNodes/CustomNodeScripts/ScreenFilter.gd" type="Script" id=2]
[ext_resource path="res://RainIsoMainContents/3dPlatformer/Textures/BrickTextureDisplacement.jpg" type="Texture" id=3]

[sub_resource type="Shader" id=1]

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform sampler2D flowMap; //Displacement map
uniform float strength;    //Force of the effect
uniform float speed;       //Speed of the effect
uniform int frames : hint_range(1, 10); //Frames of the effect

//Returns a value between 0 and 1 depending of the frames -> exemple: frames = 4, frame 1 = 0.25
float clock(float time){
	float fframes = float(frames);
	return floor(mod(time * speed, fframes)) / fframes;
}

void fragment(){
	float c = clock(TIME); //Get clock frame
	vec4 offset = texture(flowMap, vec2(SCREEN_UV.x + c, SCREEN_UV.y + c)) * strength; //Get offset 
	//COLOR = texture(TEXTURE, vec2(UV.x,UV.y) + normal.xy); //Apply offset
	COLOR = texture(SCREEN_TEXTURE, vec2(SCREEN_UV.x,SCREEN_UV.y) + offset.xy - vec2(0.5,0.5)*strength); //We need to remove the displacement 
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/strength = 1.0
shader_param/speed = 2.0
shader_param/frames = null
shader_param/flowMap = ExtResource( 3 )

[node name="SecondFilter" type="CanvasLayer"]
script = ExtResource( 1 )

[node name="PosterizationFilter" type="ColorRect" parent="."]
visible = false
material = SubResource( 2 )
margin_right = 1280.0
margin_bottom = 720.0
script = ExtResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="KuwaharaFilter" type="ColorRect" parent="."]
material = SubResource( 4 )
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 2 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}
