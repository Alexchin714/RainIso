[gd_scene load_steps=18 format=2]

[ext_resource path="res://RainIsoMainContents/Resources/MelodyTownTrainStationCeiling.png" type="Texture" id=1]
[ext_resource path="res://RainIsoMainContents/Resources/MelodyTownTrainStationFloor.png.png" type="Texture" id=2]
[ext_resource path="res://RainIsoMainContents/Resources/MelodyTownTrainPillar.png" type="Texture" id=3]
[ext_resource path="res://RainIsoMainContents/Resources/MelodyTownTrainFoliage.png" type="Texture" id=4]
[ext_resource path="res://RainIsoMainContents/Resources/TheBuckleysTrain.png" type="Texture" id=5]
[ext_resource path="res://RainIsoMainContents/Resources/TrainHandle.png" type="Texture" id=6]
[ext_resource path="res://RainIsoMainContents/3dPlatformer/Textures/TrainBackground.png" type="Texture" id=7]
[ext_resource path="res://RainIsoMainContents/Resources/GlowPiece.png" type="Texture" id=8]
[ext_resource path="res://RainIsoMainContents/Music/TrainWhistleSFX.mp3" type="AudioStream" id=9]
[ext_resource path="res://RainIsoMainContents/Music/TrainHorn.mp3" type="AudioStream" id=10]
[ext_resource path="res://RainIsoMainContents/Music/TrainTrackSFX.mp3" type="AudioStream" id=11]

[sub_resource type="TileSet" id=1]
0/name = "MelodyTownTrainStationCeiling.png 0"
0/texture = ExtResource( 1 )
0/tex_offset = Vector2( 0, 0 )
0/modulate = Color( 1, 1, 1, 1 )
0/region = Rect2( 0, 0, 48, 48 )
0/tile_mode = 0
0/occluder_offset = Vector2( 0, 0 )
0/navigation_offset = Vector2( 0, 0 )
0/shape_offset = Vector2( 0, 0 )
0/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
0/shape_one_way = false
0/shape_one_way_margin = 0.0
0/shapes = [  ]
0/z_index = 0
1/name = "MelodyTownTrainStationCeiling.png 1"
1/texture = ExtResource( 1 )
1/tex_offset = Vector2( 0, 0 )
1/modulate = Color( 1, 1, 1, 1 )
1/region = Rect2( 272, 0, 48, 48 )
1/tile_mode = 0
1/occluder_offset = Vector2( 0, 0 )
1/navigation_offset = Vector2( 0, 0 )
1/shape_offset = Vector2( 0, 0 )
1/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
1/shape_one_way = false
1/shape_one_way_margin = 0.0
1/shapes = [  ]
1/z_index = 0
2/name = "MelodyTownTrainStationCeiling.png 2"
2/texture = ExtResource( 1 )
2/tex_offset = Vector2( 0, 0 )
2/modulate = Color( 1, 1, 1, 1 )
2/region = Rect2( 48, 0, 224, 48 )
2/tile_mode = 0
2/occluder_offset = Vector2( 0, 0 )
2/navigation_offset = Vector2( 0, 0 )
2/shape_offset = Vector2( 0, 0 )
2/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
2/shape_one_way = false
2/shape_one_way_margin = 0.0
2/shapes = [  ]
2/z_index = 0

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;

uniform float angle = -0.3;
uniform float position = -0.2;
uniform float spread : hint_range(0.0, 1.0) = 0.5;
uniform float cutoff : hint_range(-1.0, 1.0) = 0.1;
uniform float falloff : hint_range(0.0, 1.0) = 0.2;
uniform float edge_fade : hint_range(0.0, 1.0) = 0.15;

uniform float speed = 1.0;
uniform float ray1_density = 8.0;
uniform float ray2_density = 30.0;
uniform float ray2_intensity : hint_range(0.0, 1.0) = 0.3;

uniform vec4 color : hint_color = vec4(1.0, 0.9, 0.65, 0.8);

uniform bool hdr = false;
uniform float seed = 5.0;

// Random and noise functions from Book of Shader's chapter on Noise.
float random(vec2 _uv) {
    return fract(sin(dot(_uv.xy,
                         vec2(12.9898, 78.233))) *
        43758.5453123);
}

float noise (in vec2 uv) {
    vec2 i = floor(uv);
    vec2 f = fract(uv);

    // Four corners in 2D of a tile
    float a = random(i);
    float b = random(i + vec2(1.0, 0.0));
    float c = random(i + vec2(0.0, 1.0));
    float d = random(i + vec2(1.0, 1.0));


    // Smooth Interpolation

    // Cubic Hermine Curve. Same as SmoothStep()
    vec2 u = f * f * (3.0-2.0 * f);

    // Mix 4 coorners percentages
    return mix(a, b, u.x) +
            (c - a)* u.y * (1.0 - u.x) +
            (d - b) * u.x * u.y;
}

mat2 rotate(float _angle){
    return mat2(vec2(cos(_angle), -sin(_angle)),
                vec2(sin(_angle), cos(_angle)));
}

vec4 screen(vec4 base, vec4 blend){
	return 1.0 - (1.0 - base) * (1.0 - blend);
}

void fragment()
{
	
	// Rotate, skew and move the UVs
	vec2 transformed_uv = ( rotate(angle) * (UV - position) )  / ( (UV.y + spread) - (UV.y * spread) );
	
	// Animate the ray according the the new transformed UVs
	vec2 ray1 = vec2(transformed_uv.x * ray1_density + sin(TIME * 0.1 * speed) * (ray1_density * 0.2) + seed, 1.0);
	vec2 ray2 = vec2(transformed_uv.x * ray2_density + sin(TIME * 0.2 * speed) * (ray1_density * 0.2) + seed, 1.0);
	
	// Cut off the ray's edges
	float cut = step(cutoff, transformed_uv.x) * step(cutoff, 1.0 - transformed_uv.x);
	ray1 *= cut;
	ray2 *= cut;
	
	// Apply the noise pattern (i.e. create the rays)
	float rays;
	
	if (hdr){
		// This is not really HDR, but check this to not clamp the two merged rays making 
		// their values go over 1.0. Can make for some nice effect
		rays = noise(ray1) + (noise(ray2) * ray2_intensity);
	}
	else{
		 rays = clamp(noise(ray1) + (noise(ray2) * ray2_intensity), 0., 1.);
	}
	
	// Fade out edges
	rays *= smoothstep(0.0, falloff, (1.0 - UV.y)); // Bottom
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, transformed_uv.x); // Left
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, 1.0 - transformed_uv.x); // Right
	
	vec3 shine = vec3(rays) * color.rgb;

	shine = screen(texture(SCREEN_TEXTURE, SCREEN_UV), vec4(color)).rgb;
	
	COLOR = vec4(shine, rays * color.a);
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/angle = -0.3
shader_param/position = -0.2
shader_param/spread = 0.5
shader_param/cutoff = 0.1
shader_param/falloff = 0.2
shader_param/edge_fade = 0.15
shader_param/speed = 4.0
shader_param/ray1_density = 10.595
shader_param/ray2_density = 30.0
shader_param/ray2_intensity = 0.3
shader_param/color = Color( 1, 0.988235, 0.823529, 0.184314 )
shader_param/hdr = false
shader_param/seed = 1.0

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 1184, 64 )

[sub_resource type="Animation" id=5]
length = 5.0
tracks/0/type = "value"
tracks/0/path = NodePath("Building/Train:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 4.9, 5 ),
"transitions": PoolRealArray( 1, 2.92, 1, 1 ),
"update": 0,
"values": [ Vector2( 288, 400 ), Vector2( 224, 400 ), Vector2( 1968, 400 ), Vector2( 1968, 400 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Building/Train/Handle:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.4, 0.8, 1.2, 1.6, 2, 2.4, 2.8, 3.2, 3.6, 4, 4.4, 4.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 30, 16 ), Vector2( 31.2, 18 ), Vector2( 28.4, 18 ), Vector2( 27.9708, 16 ), Vector2( 31.2772, 14 ), Vector2( 32.7878, 16 ), Vector2( 30, 16 ), Vector2( 31.2, 18 ), Vector2( 28.4, 18 ), Vector2( 27.9708, 16 ), Vector2( 31.2772, 14 ), Vector2( 32.7878, 16 ), Vector2( 30, 16 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Building/Train:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 4.9, 5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ true, true, false ]
}

[sub_resource type="Animation" id=6]
resource_name = "db"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:volume_db")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ -80.0, 0.0 ]
}

[node name="MelodyTownTrainStation" type="Node2D"]

[node name="Building" type="Node2D" parent="."]

[node name="Foliage" type="Sprite" parent="Building"]
position = Vector2( 832, 304 )
scale = Vector2( 4, 4.5 )
z_index = 1
texture = ExtResource( 4 )

[node name="Ceiling" type="TileMap" parent="Building"]
scale = Vector2( 4, 4 )
z_index = 2
tile_set = SubResource( 1 )
cell_size = Vector2( 16, 16 )
cell_custom_transform = Transform2D( 32, 0, 0, 32, 0, 0 )
format = 1
tile_data = PoolIntArray( 65489, 0, 0, 65492, 2, 0, 65506, 2, 0, 65520, 2, 0, 65534, 2, 0, 12, 2, 0, 26, 1, 0 )

[node name="Pillar" type="Sprite" parent="Building"]
position = Vector2( 640, 352 )
scale = Vector2( 4.4, 4.01111 )
z_index = 1
texture = ExtResource( 3 )

[node name="Pillar2" type="Sprite" parent="Building"]
position = Vector2( -752, 384 )
scale = Vector2( 4.4, 4.01111 )
z_index = 1
texture = ExtResource( 3 )

[node name="Pillar3" type="Sprite" parent="Building"]
position = Vector2( -2192, 416 )
scale = Vector2( 4.4, 4.01111 )
z_index = 1
texture = ExtResource( 3 )

[node name="Floor" type="Sprite" parent="Building"]
position = Vector2( 52, 360 )
scale = Vector2( 3.675, 4 )
z_index = 1
texture = ExtResource( 2 )

[node name="Floor3" type="Sprite" parent="Building"]
position = Vector2( -1120, 360 )
scale = Vector2( 3.675, 4 )
z_index = 1
texture = ExtResource( 2 )

[node name="Floor4" type="Sprite" parent="Building"]
position = Vector2( -2290, 360 )
scale = Vector2( 3.6875, 4 )
z_index = 1
texture = ExtResource( 2 )

[node name="Floor2" type="Sprite" parent="Building"]
position = Vector2( 1230, 360 )
scale = Vector2( 3.6875, 4 )
z_index = 1
texture = ExtResource( 2 )

[node name="Floor5" type="Sprite" parent="Building"]
position = Vector2( 52, 1080 )
rotation = 3.14159
scale = Vector2( 3.675, 4 )
z_index = 1
texture = ExtResource( 2 )

[node name="Floor6" type="Sprite" parent="Building"]
position = Vector2( -1120, 1080 )
rotation = 3.14159
scale = Vector2( 3.675, 4 )
z_index = 1
texture = ExtResource( 2 )

[node name="Floor7" type="Sprite" parent="Building"]
position = Vector2( -2290, 1080 )
rotation = 3.14159
scale = Vector2( 3.6875, 4 )
z_index = 1
texture = ExtResource( 2 )

[node name="Floor8" type="Sprite" parent="Building"]
position = Vector2( 1230, 1080 )
rotation = 3.14159
scale = Vector2( 3.6875, 4 )
z_index = 1
texture = ExtResource( 2 )

[node name="Train" type="Sprite" parent="Building"]
position = Vector2( 288, 480 )
scale = Vector2( 8, 8 )
texture = ExtResource( 5 )

[node name="TrainExtra01" type="Sprite" parent="Building/Train"]
position = Vector2( -116, 6 )
texture = ExtResource( 5 )
region_enabled = true
region_rect = Rect2( 0, 10, 60, 40 )

[node name="TrainExtra02" type="Sprite" parent="Building/Train"]
position = Vector2( -176, 6 )
texture = ExtResource( 5 )
region_enabled = true
region_rect = Rect2( 0, 10, 60, 40 )

[node name="TrainExtra03" type="Sprite" parent="Building/Train"]
position = Vector2( -236, 6 )
texture = ExtResource( 5 )
region_enabled = true
region_rect = Rect2( 0, 10, 60, 40 )

[node name="TrainExtra04" type="Sprite" parent="Building/Train"]
position = Vector2( -296, 6 )
texture = ExtResource( 5 )
region_enabled = true
region_rect = Rect2( 0, 10, 60, 40 )

[node name="Handle" type="Sprite" parent="Building/Train"]
position = Vector2( 30, 16 )
texture = ExtResource( 6 )

[node name="Background" type="Sprite" parent="Building"]
position = Vector2( -408, 872 )
scale = Vector2( 6.925, 5.35 )
z_index = -1
texture = ExtResource( 7 )
__meta__ = {
"_edit_lock_": true
}

[node name="Ray" type="ColorRect" parent="Building"]
material = SubResource( 3 )
margin_left = 1072.0
margin_right = 1674.0
margin_bottom = 591.0
rect_scale = Vector2( -1, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Collision" type="StaticBody2D" parent="Building"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Building/Collision"]
visible = false
position = Vector2( 640, 656 )
shape = SubResource( 4 )

[node name="Gradient" type="Sprite" parent="Building"]
self_modulate = Color( 0, 0, 0, 0.596078 )
position = Vector2( -2240, 560 )
scale = Vector2( 31.75, 0.25 )
z_index = 1
texture = ExtResource( 8 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/CutSceneTrainStart = SubResource( 5 )

[node name="TrainPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 11 )
bus = "SFX"

[node name="WhistlePlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 9 )
volume_db = -80.0
bus = "SFX"

[node name="AnimationPlayer" type="AnimationPlayer" parent="WhistlePlayer"]
anims/db = SubResource( 6 )

[node name="HornPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 10 )
bus = "SFX"
